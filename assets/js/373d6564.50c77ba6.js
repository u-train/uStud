"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[518],{61694:function(e){e.exports=JSON.parse('{"functions":[{"name":"init","desc":"Initalize refs, hook into UserInputService, and initalize adorns.","params":[],"returns":[],"function_type":"method","source":{"line":28,"path":"src/Painter/MouseController.lua"}},{"name":"willUnmount","desc":"Cleanup connections and adorns. Along with that, set state accordingly.","params":[],"returns":[],"function_type":"method","source":{"line":80,"path":"src/Painter/MouseController.lua"}},{"name":"render","desc":"Render.","params":[],"returns":[{"desc":"","lua_type":"RoactTree"}],"function_type":"method","source":{"line":94,"path":"src/Painter/MouseController.lua"}},{"name":"UpdateAndPaintBrush","desc":"Uses the InputObject to update the paint brush\'s position. Additionally, if\\nthe user is holding the mouse down, will paint valid studs.","params":[{"name":"Input","desc":"","lua_type":"InputObject"}],"returns":[],"function_type":"method","source":{"line":121,"path":"src/Painter/MouseController.lua"}},{"name":"UpdateAdorns","desc":"Update the adorns to what the brush is actually touching.","params":[],"returns":[],"function_type":"method","source":{"line":143,"path":"src/Painter/MouseController.lua"}},{"name":"QueryPaintableParts","desc":"Gets paintable parts from the brush that are valid.","params":[],"returns":[{"desc":"","lua_type":"{ Instance }"}],"function_type":"method","source":{"line":168,"path":"src/Painter/MouseController.lua"}}],"properties":[],"types":[],"name":"PainterMouseControl","desc":"Has the brush and is the mouse controller for the painter.\\n\\nTODO: Is there a better way of doing things with the adorns? Right now, it\'s\\nhacky to say the least. Investigate.","source":{"line":23,"path":"src/Painter/MouseController.lua"}}')}}]);