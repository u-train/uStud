"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[773],{3880:function(e){e.exports=JSON.parse('{"functions":[{"name":"init","desc":"Creates the refs, create TargetPosition binding, initalize some state, and\\nalso binds callbacks to UserInputService.","params":[],"returns":[],"function_type":"method","source":{"line":37,"path":"src/Studder/MouseController.lua"}},{"name":"willUnmount","desc":"To disconnect event handlers and set state accordingly.","params":[],"returns":[],"function_type":"method","source":{"line":86,"path":"src/Studder/MouseController.lua"}},{"name":"render","desc":"Renders.","params":[],"returns":[{"desc":"","lua_type":"RoactTree"}],"function_type":"method","source":{"line":97,"path":"src/Studder/MouseController.lua"}},{"name":"UpdateTargetPosition","desc":"Updates TargetPosition binding on invoke using current state and the current\\nmouse position provided by UserInputService.","params":[],"returns":[],"function_type":"method","source":{"line":154,"path":"src/Studder/MouseController.lua"}},{"name":"OnHit","desc":"Callback on hit. Verify that the require instances exist, update position,\\nand if needed, place or delete studs.","params":[],"returns":[],"function_type":"method","source":{"line":180,"path":"src/Studder/MouseController.lua"}}],"properties":[],"types":[],"name":"StudderMouseControl","desc":"Mouse controller for the studder. It also contains the canvas for the\\nstudder.","source":{"line":31,"path":"src/Studder/MouseController.lua"}}')}}]);