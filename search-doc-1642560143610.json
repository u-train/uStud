[{"title":"ColorInput","type":0,"sectionRef":"#","url":"api/ColorInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ColorInput","url":"api/ColorInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ColorInput","url":"api/ColorInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Color: Color3 OnColorChanged: (Color3 ) → nil Label: string }  "},{"title":"FolderContextComponent","type":0,"sectionRef":"#","url":"api/FolderContextComponent","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#properties","content":" "},{"title":"FolderContext​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#FolderContext","content":"&lt;/&gt; FolderContextComponent.FolderContext: Context  "},{"title":"Functions​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#functions","content":" "},{"title":"WithFolder​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#WithFolder","content":"&lt;/&gt; FolderContextComponent.WithFolder(render: (Folder ) → RoactTree) → ()   "},{"title":"init​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#init","content":"&lt;/&gt; FolderContextComponent:init() → ()   "},{"title":"willUnmount​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#willUnmount","content":"&lt;/&gt; FolderContextComponent:willUnmount() → ()   "},{"title":"render​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#render","content":"&lt;/&gt; FolderContextComponent:render() → ()  "},{"title":"App","type":0,"sectionRef":"#","url":"api/App","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"App","url":"api/App#types","content":" "},{"title":"Props​","type":1,"pageTitle":"App","url":"api/App#Props","content":"&lt;/&gt; interface Props { SettingManager: Settings }  "},{"title":"Functions​","type":1,"pageTitle":"App","url":"api/App#functions","content":" "},{"title":"HookOnTargetEditingInstance​","type":1,"pageTitle":"App","url":"api/App#HookOnTargetEditingInstance","content":"&lt;/&gt; App:HookOnTargetEditingInstance() → ()  "},{"title":"Bootstrapper","type":0,"sectionRef":"#","url":"api/Bootstrapper","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#functions","content":" "},{"title":"Unloading​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#Unloading","content":"&lt;/&gt; Bootstrapper.Unloading() → () Called when the plugin is being unloaded.  "},{"title":"Deactivating​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#Deactivating","content":"&lt;/&gt; Bootstrapper.Deactivating() → () Called when the plugin is being deactivated. If it's already deactivated, it will do nothing. If it's deactivating, it will disable the widget and invoke the handle.  "},{"title":"Activating​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#Activating","content":"&lt;/&gt; Bootstrapper.Activating() → () Called when the plugin is being activated. If it's already active, it will do nothing. If it's activating, it will call the plugin activate method, and pass the mouse and widget to the handle. "},{"title":"LabelledInput","type":0,"sectionRef":"#","url":"api/LabelledInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LabelledInput","url":"api/LabelledInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"LabelledInput","url":"api/LabelledInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 TextWidth: number OnValueChanged: (string) → nil Label: string }  "},{"title":"ColorSlider","type":0,"sectionRef":"#","url":"api/ColorSlider","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ColorSlider","url":"api/ColorSlider#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ColorSlider","url":"api/ColorSlider#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Color: Color3 OnColorChanged: (Color3 ) → nil }  "},{"title":"ControlledInput","type":0,"sectionRef":"#","url":"api/ControlledInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Value: string TextColor3: Color3 LayoutOrder: number BorderSizePixel: number BorderColor3: Color3 OnValueChanged: (Text) → nil ClearTextOnFocus: boolean }  "},{"title":"Functions​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#functions","content":" "},{"title":"init​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#init","content":"&lt;/&gt; ControlledInput:init() → ()   "},{"title":"render​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#render","content":"&lt;/&gt; ControlledInput:render() → ()   "},{"title":"willUpdate​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#willUpdate","content":"&lt;/&gt; ControlledInput:willUpdate() → ()  "},{"title":"Settings","type":0,"sectionRef":"#","url":"api/Settings","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Settings","url":"api/Settings#types","content":" "},{"title":"PossibleSettings​","type":1,"pageTitle":"Settings","url":"api/Settings#PossibleSettings","content":"&lt;/&gt; interface PossibleSettings { DefaultEditingIn: string }  "},{"title":"Functions​","type":1,"pageTitle":"Settings","url":"api/Settings#functions","content":" "},{"title":"Set​","type":1,"pageTitle":"Settings","url":"api/Settings#Set","content":"&lt;/&gt; Settings.Set( SettingName: string, Value: any ) → ()   "},{"title":"Get​","type":1,"pageTitle":"Settings","url":"api/Settings#Get","content":"&lt;/&gt; Settings.Get(SettingName: string) → any  "},{"title":"Painter","type":0,"sectionRef":"#","url":"api/Painter","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Painter","url":"api/Painter#types","content":" "},{"title":"Props​","type":1,"pageTitle":"Painter","url":"api/Painter#Props","content":"&lt;/&gt; interface Props { EditingIn: Instance EditingInChanged: (string) → nil HeightOffset: number HeightOffsetChanged: (number) → nil }  "},{"title":"Functions​","type":1,"pageTitle":"Painter","url":"api/Painter#functions","content":" "},{"title":"init​","type":1,"pageTitle":"Painter","url":"api/Painter#init","content":"&lt;/&gt; Painter:init() → ()   "},{"title":"willUnmount​","type":1,"pageTitle":"Painter","url":"api/Painter#willUnmount","content":"&lt;/&gt; Painter:willUnmount() → ()   "},{"title":"render​","type":1,"pageTitle":"Painter","url":"api/Painter#render","content":"&lt;/&gt; Painter:render() → ()   "},{"title":"BindHotkeys​","type":1,"pageTitle":"Painter","url":"api/Painter#BindHotkeys","content":"&lt;/&gt; Painter:BindHotkeys() → ()  "},{"title":"Slider","type":0,"sectionRef":"#","url":"api/Slider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Slider","url":"api/Slider#functions","content":" "},{"title":"init​","type":1,"pageTitle":"Slider","url":"api/Slider#init","content":"&lt;/&gt; Slider:init() → ()   "},{"title":"render​","type":1,"pageTitle":"Slider","url":"api/Slider#render","content":"&lt;/&gt; Slider:render() → ()   "},{"title":"UpdateValueFromMousePosition​","type":1,"pageTitle":"Slider","url":"api/Slider#UpdateValueFromMousePosition","content":"&lt;/&gt; Slider:UpdateValueFromMousePosition() → ()   "},{"title":"ConvertValueToPercentage​","type":1,"pageTitle":"Slider","url":"api/Slider#ConvertValueToPercentage","content":"&lt;/&gt; Slider:ConvertValueToPercentage() → ()  "},{"title":"PainterMouseControl","type":0,"sectionRef":"#","url":"api/PainterMouseControl","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#functions","content":" "},{"title":"init​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#init","content":"&lt;/&gt; PainterMouseControl:init() → ()   "},{"title":"willUnmount​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#willUnmount","content":"&lt;/&gt; PainterMouseControl:willUnmount() → ()   "},{"title":"render​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#render","content":"&lt;/&gt; PainterMouseControl:render() → ()   "},{"title":"UpdateAndPaintBrush​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#UpdateAndPaintBrush","content":"&lt;/&gt; PainterMouseControl:UpdateAndPaintBrush() → ()   "},{"title":"UpdateAdorns​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#UpdateAdorns","content":"&lt;/&gt; PainterMouseControl:UpdateAdorns() → ()   "},{"title":"QueryPaintableParts​","type":1,"pageTitle":"PainterMouseControl","url":"api/PainterMouseControl#QueryPaintableParts","content":"&lt;/&gt; PainterMouseControl:QueryPaintableParts() → ()  "},{"title":"GetRaycastResultFromMouse","type":0,"sectionRef":"#","url":"api/GetRaycastResultFromMouse","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GetRaycastResultFromMouse","url":"api/GetRaycastResultFromMouse#functions","content":" "},{"title":"GetRaycastResultFromMouse​","type":1,"pageTitle":"GetRaycastResultFromMouse","url":"api/GetRaycastResultFromMouse#GetRaycastResultFromMouse","content":"&lt;/&gt; GetRaycastResultFromMouse.GetRaycastResultFromMouse( MousePosition: Vector2 | Vector3 , Container: Instance ) → RaycastResult  "},{"title":"TextColorInput","type":0,"sectionRef":"#","url":"api/TextColorInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"TextColorInput","url":"api/TextColorInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"TextColorInput","url":"api/TextColorInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 OnColorChanged: (Color3 ) → nil Color: Color3 }  "},{"title":"StudderMouseControl","type":0,"sectionRef":"#","url":"api/StudderMouseControl","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"StudderMouseControl","url":"api/StudderMouseControl#functions","content":" "},{"title":"init​","type":1,"pageTitle":"StudderMouseControl","url":"api/StudderMouseControl#init","content":"&lt;/&gt; StudderMouseControl:init() → ()   "},{"title":"willUnmount​","type":1,"pageTitle":"StudderMouseControl","url":"api/StudderMouseControl#willUnmount","content":"&lt;/&gt; StudderMouseControl:willUnmount() → ()   "},{"title":"render​","type":1,"pageTitle":"StudderMouseControl","url":"api/StudderMouseControl#render","content":"&lt;/&gt; StudderMouseControl:render() → ()   "},{"title":"UpdateTargetPosition​","type":1,"pageTitle":"StudderMouseControl","url":"api/StudderMouseControl#UpdateTargetPosition","content":"&lt;/&gt; StudderMouseControl:UpdateTargetPosition() → ()   "},{"title":"OnHit​","type":1,"pageTitle":"StudderMouseControl","url":"api/StudderMouseControl#OnHit","content":"&lt;/&gt; StudderMouseControl:OnHit() → ()  "},{"title":"Studder","type":0,"sectionRef":"#","url":"api/Studder","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Studder","url":"api/Studder#types","content":" "},{"title":"Props​","type":1,"pageTitle":"Studder","url":"api/Studder#Props","content":"&lt;/&gt; interface Props { EditingIn: Instance EditingInChanged: (string) → nil HeightOffset: number HeightOffsetChanged: (number) → nil }  "},{"title":"Functions​","type":1,"pageTitle":"Studder","url":"api/Studder#functions","content":" "},{"title":"init​","type":1,"pageTitle":"Studder","url":"api/Studder#init","content":"&lt;/&gt; Studder:init() → () init  "},{"title":"willUnmount​","type":1,"pageTitle":"Studder","url":"api/Studder#willUnmount","content":"&lt;/&gt; Studder:willUnmount() → () --  "},{"title":"render​","type":1,"pageTitle":"Studder","url":"api/Studder#render","content":"&lt;/&gt; Studder:render() → ()   "},{"title":"UpdatePartSize​","type":1,"pageTitle":"Studder","url":"api/Studder#UpdatePartSize","content":"&lt;/&gt; Studder:UpdatePartSize() → ()   "},{"title":"UpdateSnappingInterval​","type":1,"pageTitle":"Studder","url":"api/Studder#UpdateSnappingInterval","content":"&lt;/&gt; Studder:UpdateSnappingInterval() → ()   "},{"title":"BindHotkeys​","type":1,"pageTitle":"Studder","url":"api/Studder#BindHotkeys","content":"&lt;/&gt; Studder:BindHotkeys() → ()  "},{"title":"Topbar","type":0,"sectionRef":"#","url":"api/Topbar","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Topbar","url":"api/Topbar#types","content":" "},{"title":"Props​","type":1,"pageTitle":"Topbar","url":"api/Topbar#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Color: Color3 OnColorChanged: (Color3 ) → nil }  "},{"title":"ToolWrapper","type":0,"sectionRef":"#","url":"api/ToolWrapper","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ToolWrapper","url":"api/ToolWrapper#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ToolWrapper","url":"api/ToolWrapper#Props","content":"&lt;/&gt; interface Props { Title: string EditingIn: Instance EditingInChanged: (Instance ) → nil }  "}]