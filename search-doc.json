[{"title":"GetRaycastResultFromMouse","type":0,"sectionRef":"#","url":"api/GetRaycastResultFromMouse","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GetRaycastResultFromMouse","url":"api/GetRaycastResultFromMouse#functions","content":" "},{"title":"GetRaycastResultFromMouse​","type":1,"pageTitle":"GetRaycastResultFromMouse","url":"api/GetRaycastResultFromMouse#GetRaycastResultFromMouse","content":"&lt;/&gt; GetRaycastResultFromMouse.GetRaycastResultFromMouse( MousePosition: Vector2 | Vector3 , Container: Instance ) → RaycastResult  "},{"title":"ColorSlider","type":0,"sectionRef":"#","url":"api/ColorSlider","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ColorSlider","url":"api/ColorSlider#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ColorSlider","url":"api/ColorSlider#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Color: Color3 OnColorChanged: (Color3 ) → nil }  "},{"title":"FolderContextComponent","type":0,"sectionRef":"#","url":"api/FolderContextComponent","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#functions","content":" "},{"title":"WithFolder​","type":1,"pageTitle":"FolderContextComponent","url":"api/FolderContextComponent#WithFolder","content":"&lt;/&gt; FolderContextComponent.WithFolder(render: (Folder ) → RoactTree) → ()  "},{"title":"App","type":0,"sectionRef":"#","url":"api/App","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"App","url":"api/App#types","content":" "},{"title":"Props​","type":1,"pageTitle":"App","url":"api/App#Props","content":"&lt;/&gt; interface Props { SettingManager: Settings }  "},{"title":"ColorInput","type":0,"sectionRef":"#","url":"api/ColorInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ColorInput","url":"api/ColorInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ColorInput","url":"api/ColorInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Color: Color3 OnColorChanged: (Color3 ) → nil Label: string }  "},{"title":"Painter","type":0,"sectionRef":"#","url":"api/Painter","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Painter","url":"api/Painter#types","content":" "},{"title":"Props​","type":1,"pageTitle":"Painter","url":"api/Painter#Props","content":"&lt;/&gt; interface Props { EditingIn: Instance EditingInChanged: (string) → nil HeightOffset: number HeightOffsetChanged: (number) → nil }  "},{"title":"ControlledInput","type":0,"sectionRef":"#","url":"api/ControlledInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ControlledInput","url":"api/ControlledInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Value: string TextColor3: Color3 LayoutOrder: number BorderSizePixel: number BorderColor3: Color3 OnValueChanged: (Text) → nil ClearTextOnFocus: boolean }  "},{"title":"Settings","type":0,"sectionRef":"#","url":"api/Settings","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Settings","url":"api/Settings#types","content":" "},{"title":"PossibleSettings​","type":1,"pageTitle":"Settings","url":"api/Settings#PossibleSettings","content":"&lt;/&gt; interface PossibleSettings { DefaultEditingIn: string }  "},{"title":"Functions​","type":1,"pageTitle":"Settings","url":"api/Settings#functions","content":" "},{"title":"Set​","type":1,"pageTitle":"Settings","url":"api/Settings#Set","content":"&lt;/&gt; Settings.Set( SettingName: string, Value: any ) → ()   "},{"title":"Get​","type":1,"pageTitle":"Settings","url":"api/Settings#Get","content":"&lt;/&gt; Settings.Get(SettingName: string) → any  "},{"title":"LabelledInput","type":0,"sectionRef":"#","url":"api/LabelledInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LabelledInput","url":"api/LabelledInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"LabelledInput","url":"api/LabelledInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 TextWidth: number OnValueChanged: (string) → nil Label: string }  "},{"title":"Studder","type":0,"sectionRef":"#","url":"api/Studder","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Studder","url":"api/Studder#types","content":" "},{"title":"Props​","type":1,"pageTitle":"Studder","url":"api/Studder#Props","content":"&lt;/&gt; interface Props { EditingIn: Instance EditingInChanged: (string) → nil HeightOffset: number HeightOffsetChanged: (number) → nil }  "},{"title":"Bootstrapper","type":0,"sectionRef":"#","url":"api/Bootstrapper","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#functions","content":" "},{"title":"Unloading​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#Unloading","content":"&lt;/&gt; Bootstrapper.Unloading() → () Called when the plugin is being unloaded.  "},{"title":"Deactivating​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#Deactivating","content":"&lt;/&gt; Bootstrapper.Deactivating() → () Called when the plugin is being deactivated. If it's already deactivated, it will do nothing. If it's deactivating, it will disable the widget and invoke the handle.  "},{"title":"Activating​","type":1,"pageTitle":"Bootstrapper","url":"api/Bootstrapper#Activating","content":"&lt;/&gt; Bootstrapper.Activating() → () Called when the plugin is being activated. If it's already active, it will do nothing. If it's activating, it will call the plugin activate method, and pass the mouse and widget to the handle. "},{"title":"TextColorInput","type":0,"sectionRef":"#","url":"api/TextColorInput","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"TextColorInput","url":"api/TextColorInput#types","content":" "},{"title":"Props​","type":1,"pageTitle":"TextColorInput","url":"api/TextColorInput#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 OnColorChanged: (Color3 ) → nil Color: Color3 }  "},{"title":"Topbar","type":0,"sectionRef":"#","url":"api/Topbar","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Topbar","url":"api/Topbar#types","content":" "},{"title":"Props​","type":1,"pageTitle":"Topbar","url":"api/Topbar#Props","content":"&lt;/&gt; interface Props { Size: UDim2 Position: UDim2 Color: Color3 OnColorChanged: (Color3 ) → nil }  "},{"title":"ToolWrapper","type":0,"sectionRef":"#","url":"api/ToolWrapper","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ToolWrapper","url":"api/ToolWrapper#types","content":" "},{"title":"Props​","type":1,"pageTitle":"ToolWrapper","url":"api/ToolWrapper#Props","content":"&lt;/&gt; interface Props { Title: string EditingIn: Instance EditingInChanged: (Instance ) → nil }  "}]